/*  This file is automatic generated by NiTiS-Dev/NiTiS.Native:CodeGen
 *  Source files: [C:\!Temp\tmp97CC.tmp]
 */
#pragma warning disable 1591

namespace NiTiS.Native.OpenGL.Enums;

[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
public enum InternalFormatPName
{
	Samples =  unchecked((int)0x80A9),
	GenerateMipmap =  unchecked((int)0x8191),
	InternalformatSupported =  unchecked((int)0x826F),
	InternalformatPreferred =  unchecked((int)0x8270),
	InternalformatRedSize =  unchecked((int)0x8271),
	InternalformatGreenSize =  unchecked((int)0x8272),
	InternalformatBlueSize =  unchecked((int)0x8273),
	InternalformatAlphaSize =  unchecked((int)0x8274),
	InternalformatDepthSize =  unchecked((int)0x8275),
	InternalformatStencilSize =  unchecked((int)0x8276),
	InternalformatSharedSize =  unchecked((int)0x8277),
	InternalformatRedType =  unchecked((int)0x8278),
	InternalformatGreenType =  unchecked((int)0x8279),
	InternalformatBlueType =  unchecked((int)0x827A),
	InternalformatAlphaType =  unchecked((int)0x827B),
	InternalformatDepthType =  unchecked((int)0x827C),
	InternalformatStencilType =  unchecked((int)0x827D),
	MaxWidth =  unchecked((int)0x827E),
	MaxHeight =  unchecked((int)0x827F),
	MaxDepth =  unchecked((int)0x8280),
	MaxLayers =  unchecked((int)0x8281),
	ColorComponents =  unchecked((int)0x8283),
	ColorRenderable =  unchecked((int)0x8286),
	DepthRenderable =  unchecked((int)0x8287),
	StencilRenderable =  unchecked((int)0x8288),
	FramebufferRenderable =  unchecked((int)0x8289),
	FramebufferRenderableLayered =  unchecked((int)0x828A),
	FramebufferBlend =  unchecked((int)0x828B),
	ReadPixels =  unchecked((int)0x828C),
	ReadPixelsFormat =  unchecked((int)0x828D),
	ReadPixelsType =  unchecked((int)0x828E),
	TextureImageFormat =  unchecked((int)0x828F),
	TextureImageType =  unchecked((int)0x8290),
	GetTextureImageFormat =  unchecked((int)0x8291),
	GetTextureImageType =  unchecked((int)0x8292),
	Mipmap =  unchecked((int)0x8293),
	AutoGenerateMipmap =  unchecked((int)0x8295),
	ColorEncoding =  unchecked((int)0x8296),
	SrgbRead =  unchecked((int)0x8297),
	SrgbWrite =  unchecked((int)0x8298),
	Filter =  unchecked((int)0x829A),
	VertexTexture =  unchecked((int)0x829B),
	TessControlTexture =  unchecked((int)0x829C),
	TessEvaluationTexture =  unchecked((int)0x829D),
	GeometryTexture =  unchecked((int)0x829E),
	FragmentTexture =  unchecked((int)0x829F),
	ComputeTexture =  unchecked((int)0x82A0),
	TextureShadow =  unchecked((int)0x82A1),
	TextureGather =  unchecked((int)0x82A2),
	TextureGatherShadow =  unchecked((int)0x82A3),
	ShaderImageLoad =  unchecked((int)0x82A4),
	ShaderImageStore =  unchecked((int)0x82A5),
	ShaderImageAtomic =  unchecked((int)0x82A6),
	ImageTexelSize =  unchecked((int)0x82A7),
	ImageCompatibilityClass =  unchecked((int)0x82A8),
	ImagePixelFormat =  unchecked((int)0x82A9),
	ImagePixelType =  unchecked((int)0x82AA),
	SimultaneousTextureAndDepthTest =  unchecked((int)0x82AC),
	SimultaneousTextureAndStencilTest =  unchecked((int)0x82AD),
	SimultaneousTextureAndDepthWrite =  unchecked((int)0x82AE),
	SimultaneousTextureAndStencilWrite =  unchecked((int)0x82AF),
	TextureCompressedBlockWidth =  unchecked((int)0x82B1),
	TextureCompressedBlockHeight =  unchecked((int)0x82B2),
	TextureCompressedBlockSize =  unchecked((int)0x82B3),
	ClearBuffer =  unchecked((int)0x82B4),
	TextureView =  unchecked((int)0x82B5),
	ViewCompatibilityClass =  unchecked((int)0x82B6),
	TextureCompressed =  unchecked((int)0x86A1),
	NumSurfaceCompressionFixedRatesExt =  unchecked((int)0x8F6E),
	ImageFormatCompatibilityType =  unchecked((int)0x90C7),
	ClearTexture =  unchecked((int)0x9365),
	NumSampleCounts =  unchecked((int)0x9380),
}

#pragma warning restore

